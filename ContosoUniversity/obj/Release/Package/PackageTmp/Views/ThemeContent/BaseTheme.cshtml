@model OLProject.Models.tb_ThemeContent
<script src="../../jscripts/jquery-1.5.1.min.js" type="text/javascript"></script>
<script type="text/javascript">



    
          $(document).ready(function () {
              $("#accordion").accordion();
          });

          $(function () 
          {
              $("#tabs").tabs();
          });

          $("#someParentOfA").delegate("#someA", "click", function(){

});

          $.fx.speeds._default = 500;
          $(function () {
              $("#dialog").dialog({
                  autoOpen: false,
                  show: "blind",
                  hide: "explode",
                  height: 320,
                  width: 700,
                  modal: true

              });
            @Html.Raw(ViewData["script"])
         
              $("#opener").click(function (id) {
                  LoadData(id);
                  $("#dialog").dialog("open");


                  return false;
              });
          });

   
     function UpdateClassList()
     {
       destElement = document.getElementById("ThemeId");
       id= destElement.value
       var url = '/ThemeContent/showtheme/' +id;
      
        $("#tasklistResult").load(url);
    }
     


$(function() {

    $( "#dialog-confirm" ).dialog({
        resizable: false,
        height:140,
        modal: true,
        buttons: {
            "Yes": function() {
                //Function call to commit to database
            },
            "No": function() {
                $( this ).dialog( "close" );
            }
        }
    });
});
</script>
 


<form   method="post"  runat="server" > 
    <table width="900px" align="center">
    <tr>
    <td style="Width:20%">
     </td>
    <td style="Width:80%">
     </td>
    
    </tr>
     
    @using (Html.BeginForm())
       {
         @Html.ValidationSummary(true)

                  <tr>
    <td valign='top'>
         <b>Select Theme</b></td>
    <td>
         <div>
      @Html.DropDownList("ThemeId", (SelectList)ViewData["Typelist1"], "Select", new { style = "width: 140px;", onchange = "UpdateClassList();" })
             </div>
             </td>
    </tr>

                  <tr>
    <td valign='top'>
         &nbsp;</td>
    <td>
           <div id="tasklistResult" title="Inner Container">
           @Html.Raw(ViewData["themeimage"])
           </div></td>
    </tr>
        <tr>
    <td valign='top'>
   <b>Content Type</b> </td>
    <td > 
    @Html.DropDownList("UploadTypeId", (SelectList)ViewData["Typelist"], "Select", new { style = "width: 140px;"})
       
      </td>
    </tr>


     <tr>
    <td valign='top'>
   <b>Width:</b> </td>
    <td > 
     @Html.TextBoxFor(model => model.intWidth, new { Style = "Width:100px" })
       
      </td>
    </tr>

      <tr>
    <td valign='top'>
   <b>Height:</b> </td>
    <td > 
     @Html.TextBoxFor(model => model.intHeight, new { Style = "Width:100px" })
       
      </td>
    </tr>
       <tr>
    <td>
         </td>
    <td>
            @if (Convert.ToInt32( ViewData["buttonname"]) == 1)
              { 
               <input type="image" src="../../siteimages/submit.png" /><br />
               }
             @if (Convert.ToInt32( ViewData["buttonname"]) == 2)
              { 
               <input type="image" src="../../siteimages/update.png" /><br />
               }
            @if (Convert.ToInt32( ViewData["buttonname"]) == 3)
              { 
              <input type="image" src="../../siteimages/Delete.png" /><br />
               }
              

        
   @Html.Raw(ViewData["errorMsg"] )
        &nbsp;</td>
    </tr>                  
     }
            </table>
    </form>
 