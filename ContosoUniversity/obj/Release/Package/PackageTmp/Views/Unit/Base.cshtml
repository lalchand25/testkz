@model OLProject.Models.tb_UnitMaster

<link href="../../content/NewStyle.css" rel="stylesheet" type="text/css" />
<script src="../../jscripts/tiny_mce/tiny_mce_src.js" type="text/javascript"></script>
<script type="text/javascript">
    tinyMCE.init({
        // General options
        mode: "textareas",
        theme: "advanced",
        plugins: "autolink,lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,autosave",

        // Theme options
        theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
        theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
        theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
        theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak,restoredraft",
        theme_advanced_toolbar_location: "top",
        theme_advanced_toolbar_align: "left",
        theme_advanced_statusbar_location: "bottom",
        theme_advanced_resizing: true,

        // Example content CSS (should be your site CSS)
        content_css: "css/content.css",

        // Drop lists for link/image/media/template dialogs
        template_external_list_url: "lists/template_list.js",
        external_link_list_url: "lists/link_list.js",
        external_image_list_url: "lists/image_list.js",
        media_external_list_url: "lists/media_list.js",

        // Style formats
        style_formats: [
			{ title: 'Bold text', inline: 'b' },
			{ title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
			{ title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
			{ title: 'Example 1', inline: 'span', classes: 'example1' },
			{ title: 'Example 2', inline: 'span', classes: 'example2' },
			{ title: 'Table styles' },
			{ title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
        ],

        // Replace values for the template plugin
        template_replace_values: {
            username: "Some User",
            staffid: "991234"
        }
    });
</script>
<!-- /TinyMCE -->
<script src="../../jscripts/jquery-1.5.1.min.js" type="text/javascript"></script>
<script type="text/javascript">




    $(document).ready(function () {
        $("#accordion").accordion();
    });

    $(function () {
        $("#tabs").tabs();
    });

    $("#someParentOfA").delegate("#someA", "click", function () {

    });

    $.fx.speeds._default = 500;
    $(function () {
        $("#dialog").dialog({
            autoOpen: false,
            show: "blind",
            hide: "explode",
            height: 320,
            width: 700,
            modal: true

        });
            @Html.Raw(ViewData["script"])

        $("#opener").click(function (id) {
            LoadData(id);
            $("#dialog").dialog("open");


            return false;
        });
    });


    //function UpdateClassList() {
    //    destElement = document.getElementById("SubjectId");
    //    id = destElement.value
    //    var url = '/Unit/ClassList/' + id;

    //    $("#tasklistResult").load(url);
    //}



    $(function () {

        $("#dialog-confirm").dialog({
            resizable: false,
            height: 140,
            modal: true,
            buttons: {
                "Yes": function () {
                    //Function call to commit to database
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });
    });
</script>





    <table width="100%">
        <tr>
            <td style="Width: 20%"></td>
            <td style="Width: 80%">
                <strong></strong></td>

        </tr>
 
            @Html.ValidationSummary(true)
         
            <tr>
                <td>
                    <label>Subject Name</label> </td>
                <td>
                    @Html.DropDownList("SubjectId", (SelectList)ViewData["SubjectList"], "Select", new { @class = "form-control", onchange = "UpdateClassList();" })
                    <b>@Html.ValidationMessageFor(model => model.SubjectId)</b>
                </td>

            </tr>
         
            
            
          @*  <tr>
                <td>
                    <label>Class Name</label>

                </td>
                <td>

                    @if (ViewData["UnitClassName"] == null)
                    {

                        <div id="tasklistResult" title="Inner Container">
                            <select id="ClassesId" class="form-control">
                                <option>Select</option>
                            </select>
                        </div> 
                        <b>@Html.ValidationMessageFor(model => model.ClassesId)</b>
    
                    }
                    else
                    { 
                        @Html.HiddenFor(model => model.ClassesId)
                        <b>@Html.Raw(ViewData["UnitClassName"])</b>
                        
                        
                        
                    }
                </td>

            </tr>
             *@
            
            
              

            <tr>
                <td>
                    <label>Unit Name</label> </td>
                <td>
                    @Html.TextBoxFor(model => model.UnitName, new { @class = "form-control" })
                    <b>@Html.ValidationMessageFor(model => model.UnitName)</b>
                </td>

            </tr>
                    


         @*   <tr>
                <td>
                    <label>Description</label> </td>
                <td>
                    @Html.TextAreaFor(model => model.UnitDesc, new { @class = "form-control" })
                    <b>@Html.ValidationMessageFor(model => model.UnitDesc)</b>

                </td>

            </tr>
             
            <tr>
                <td>
                    <label>Select Image to Upload</label> </td>
                <td>

                    <input type="file" id="fileToUpload0" name="file" />
                    <p>Formats : png,jpg,gif,jpeg. Maximum Size : 100kb</p> 
             
               
                </td>

            </tr>  *@    
                
            <tr>
                <td>
                    <label>Display Order No.</label> </td>
                <td>

                    @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control" })
                    <b>@Html.ValidationMessageFor(model => model.DisplayOrder)</b>
                </td>

            </tr>      
            <tr>
                <td>
                    <label>Publish:</label></td>
                <td>
                    @Html.CheckBox("Publish")
                </td>
            </tr>           
            
            <tr>
                <td>&nbsp;</td>
                <td>
                    @if (Convert.ToInt32(ViewData["buttonname"]) == 1)
                    { 
                        <button class="btn btn-success" type="submit"><i class="fa fa-plus"></i>Submit</button>
                    }
                    @if (Convert.ToInt32(ViewData["buttonname"]) == 2)
                    { 
                        <button class="btn btn-primary" type="submit"><i class="fa fa-pencil"></i>Save</button>
                    }
                    @if (Convert.ToInt32(ViewData["buttonname"]) == 3)
                    { 
                        <button class="btn btn-danger" type="submit"><i class="fa fa-trash"></i>Delete</button>
                    }
                </td>
           </tr>  
    </table>